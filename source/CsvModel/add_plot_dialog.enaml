from chaco.api import Plot, ArrayPlotData
from enaml.stdlib.radio_group import RadioGroup
from numpy import zeros
from chaco.api import Plot, ArrayPlotData
from traits.api import HasTraits

class InitPlot(HasTraits):
    def __init__(self):
        plotdata = ArrayPlotData(x=zeros((100,100)))
        plot = Plot(plotdata)
        plot.img_plot('x')
        self.plot = plot
        pass

enamldef AddXYPlotDialog(Dialog):
    attr model
    attr selection_model
    Container:
        constraints = [
            vbox(preview_form, cont_disc_radio,use_current_selection)
        ]
        Form:
            id: preview_form
            Label:
                text = 'Plot Preview'
            EnableCanvas:
                id: plot_preview
                constraints=[height==256, width==256]
                component = InitPlot().plot
        RadioGroup:
            id: cont_disc_radio
            RadioButton:
                text = 'Discrete'
                checked = True
            RadioButton:
                text = 'Continuous'
        #PushButton:
        #    id: use_selection_pb
        #    text = 'Use Current Selection'
        #    clicked ::
        #        model.selection_handler.current_selection = \
        #                                    selection_model.get_selection()
        #        model.selection_handler.create_selection()
        #        if model.selection_handler.xyplot_check():
        #            indices = (model.selection_handler.selected_indices[0][1],
        #                       model.selection_handler.selected_indices[1][1])
        #            plotdata = ArrayPlotData(x=model.table[:,indices[0]],
        #                                     y=model.table[:,indices[1]])
        #            plot = Plot(plotdata)
        #            plot.plot(("x","y"),type='scatter',color='auto')
        #            plot_preview.component = plot
        CheckBox:
            id: use_current_selection
            text = 'Use Current Selection'
            checked = False
            toggled ::
                if checked:
                    model.selection_handler.current_selection = \
                                    selection_model.get_selection()
                    model.selection_handler.create_selection()
                    if model.selection_handler.xyplot_check():
                        indices = (model.selection_handler.selected_indices[0][1],
                                model.selection_handler.selected_indices[1][1])
                        plotdata = ArrayPlotData(x=model.table[:,indices[0]],
                                             y=model.table[:,indices[1]])
                        plot = Plot(plotdata)
                        plot.plot(("x","y"),type='scatter',color='auto')
                        model.xvsy_plot = plot
    closed ::
        if model.selection_handler.xyplot_check():
            accept()
        else: reject()

enamldef AddPlotFromSelection(Dialog):
    attr model
    attr selection_model
    Container:
        constraints = []
        Form:
            Label:
                text = 'Type'
            Container:
                Checkbox:
                    id: add_plot_continuous
                    text = 'Continuous'
                Checkbox:
                    id: add_plot_discrete
                    text = 'Discrete'
            Label:
                text = 'Color'
            