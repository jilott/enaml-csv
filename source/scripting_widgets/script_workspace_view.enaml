from script_handler import ScriptHandler
from workspace_handler import WorkspaceHandler
from selection_handler import SelectionHandler
from enaml.stdlib.table_model import TableModel

import os
import csv
import numpy as np

filename = os.path.join('..','..','datasets','sample.csv')
x = np.genfromtxt(filename, delimiter=',', skip_header=1)
csv_reader = csv.reader(file(filename))
headers = csv_reader.next()

enamldef ConfigureSelection(Dialog):
    title = 'Configure Selection'
    Form:
        Label:
            text = 'Variable Name'
        Label:
            text = 'Selected Rows/Column'
        Field:
            id: varname1
            value := 'x'
        Field:
            id: var_value1
            value := selection_handler.selection[0]
        Field:
            id: varname2
            value := 'y'
        Field:
            id: var_value2
            value := selection_handler.selection[len(selection_handler.selection)-1]
        PushButton:
            text = 'OK'
            clicked ::
                accept()
        PushButton:
            text = 'Cancel'
            clicked ::
                reject()


enamldef Main(MainWindow):
    
    attr script_handler = ScriptHandler()
    # For handling the scripting
    
    attr workspace_handler = WorkspaceHandler({})
    # Subclass for the TableView model
    
    attr selection_handler = SelectionHandler()
    
    Container:
        constraints = [
            hbox(
                vbox(tv_data, config_selection_tableview,
                     use_selection_tableview, clear_selection_tableview),
                vbox(text_editor, run_button),
                vbox(tv, use_selection_workspace, clear_selection_workspace))
        ]
        
        TableView:
            id: tv_data
            item_model = TableModel(x, editable=True,
                                    horizontal_headers=headers)
            BaseSelectionModel:
                current_event ::
                    index = event.new[1]
                    selection_handler.selection.append((index.row,
                                                        index.column))

        
        PushButton:
            id: config_selection_tableview
            text = 'Configure Selection'
            clicked ::
                dlg = ConfigureSelection()
                dlg.show()
                if dlg.result == 'accepted':
                    workspace_handler.workspace[varname1.value]=var_value1.value
                    workspace_handler.workspace[varname2.value]=var_value2.value
                
        
        PushButton:
            id: use_selection_tableview
            text = 'Use Selection'
            clicked ::
                pass
        
        PushButton:
            id: clear_selection_tableview
            text = 'Clear Selection'
            clicked ::
                pass
        
        TextEditor:
            id: text_editor
        PushButton:
            id: run_button
            text = 'Run'
            clicked ::
                script_handler.script = text_editor.get_text()
                script_handler.exec_script()
                wh = WorkspaceHandler(script_handler.my_locals)
                tv.item_model = wh
                
        TableView:
            id: tv
            item_model = workspace_handler
        PushButton:
            id: use_selection_workspace
            text = 'Use Selection'
            clicked ::
                pass
        PushButton:
            id: clear_selection_workspace
            text = 'Clear Selection'
            clicked ::
                pass