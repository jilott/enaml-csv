# An example of a widget for plotting individual columns against one another
# that can be used in the csv editor.

import os
import numpy as np
from traits.api import HasTraits, Array, Str
from chaco.api import Plot, ArrayPlotData
from chaco.tools.api import PanTool, ZoomTool
from enaml.validation import AbstractValidator
from enaml.stdlib.radio_group import RadioGroup

filename = os.path.join('..','..','datasets','sample.csv')
table = np.genfromtxt(filename, delimiter=',', skip_header=1)


class XvsYModel(HasTraits):
    
    data = Array
    xind = Str(0)
    yind = Str(1)
    xvsy_plot = Plot
    xvsy_plotdata = ArrayPlotData
    
    def __init__(self):
        
        self.data = table
        self.xvsy_plotdata = ArrayPlotData(x=self.data[:,int(self.xind)],
                                           y=self.data[:,int(self.yind)])
        plot = Plot(self.xvsy_plotdata)
        plot.plot(("x","y"),type='scatter',color='auto')
        plot.tools.append(PanTool(plot))
        plot.tools.append(ZoomTool(plot))
        self.xvsy_plot = plot
    
    def _xind_changed(self,new):
        self.xvsy_plotdata.set_data('x',self.data[:,str(new)])
    
    def _yind_changed(self, new):
        self.xvsy_plotdata.set_data('y',self.data[:,str(new)])


enamldef PlotListContainer(Container):
    Container:
        padding = 5
        constraints = [
            hbox(plot_name, plot_type, plot_type_select,
                 plot_visible_toggle, plot_edit_button)
        ]
        hug_width='strong'
        
        Label:
            id: plot_name
            text = 'Plot Name'
        Label:
            id: plot_type
            text = 'Type'
        RadioGroup:
            id: plot_type_select
            RadioButton:
                id: plot_type_cont_select
                text = 'Continuous'
            RadioButton:
                id: plot_type_disc_select
                text = 'Discrete'
        CheckBox:
            id: plot_visible_toggle
            text = 'Visibile'
            checked  = True
        PushButton:
            id: plot_edit_button
            text = 'Edit Plot'
            clicked ::
                pass

enamldef Main(MainWindow):
    attr xvsyplot = XvsYModel()
    Container:
        padding = 5
        constraints = [
            hbox(
            vbox(plot_area, hbox(legend_toggle, grid_toggle,indices_form)),
            #vbox(pan_toggle, zoom_toggle, drag_toggle),
            vbox(add_plot_dialog, plot_list_scroll)
            )
        ]
        hug_width='strong'
        EnableCanvas:
            id: plot_area
            constraints = [height==512, width==512]
            component << xvsyplot.xvsy_plot
        
        CheckBox:
            id: legend_toggle
            text = 'Show Legend'
            checked = True
        
        CheckBox:
            id: grid_toggle
            text = 'Grid On/Off'
            checked = True
        
        
            
        
        
        PushButton:
            id: add_plot_dialog
            text = 'Add Plot'
            clicked ::
                pass
        
        ScrollArea:
            id: plot_list_scroll
            PlotListContainer:
                id: plot_list_container
                
        
        Form:
            id: indices_form
            Label:
                text = 'X'
            Field:
        #        validator = int
                value >> xvsyplot.xind
            Label:
                text = 'Y'
            Field:
        #        validator = int
                value >> xvsyplot.yind