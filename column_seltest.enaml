#from enaml.stdlib.list_model import ListModel

from column_selection_model import ColumnSelectionModel

#from enaml.components.row_selection_model import RowSelectionModel

from enaml.stdlib.table_model import TableModel
from enaml.styling.brush import Brush
from enaml.styling.color import Color
from enaml.guard import guard

#from enaml.components.base_selection_model import BaseSelectionModel

from traits.api import HasTraits
import numpy as np

columns = range(1000)
list_model = ListModel(columns)
table = np.arange(100*1000).reshape((100,1000))
shade_brush = Brush(Color(237,237,237))
def table_background(val, row, col):
    if row%2==0:
        return shade_brush
table_model = TableModel(table, background_brush_func=table_background)

def printer(event):
    msg = '{name}: {index.row!r}, {index.column!r}'
    msg = msg.format(name=event.name, index=event.new)
    print msg






class SimpleSelectionModel(HasTraits):
    selected_columns = List(Int)
    def _selected_columns_changed(self, new):
        print 'Selected Columns: {!r}'.format(new)

enamldef Main(MainWindow):
    attr simple_selection_model = SimpleSelectionModel()
    title = 'Table Selection'
    Container:
        TableView:
            id: tv1
            hug_width = 'strong'
            item_model = list_model
            ColumnSelectionModel:
                selection_mode = 'extended'
                selected_columns := simple_selection_model.selected_columns
        TableView:
            id: tv2
            item_model = table_model
            activated :: printer(event)
            clicked :: printer (event)
            double_clicked :: printer(event)
            ColumnSelectionModel:
                selection_mode = 'extended'
                selected_columns := simple_selection_model.selected_columns